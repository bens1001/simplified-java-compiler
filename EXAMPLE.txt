import edu.example.ArrayTools;
import edu.example.CharUtils;

class Person {
    int age;
    char[1] gender;
    boolean isStudent;
    int[7][8][5][2] grades;
    

    Person(int age, char[1] gender, boolean isStudent, int[7][8][5][2] grades) {
        this.age = age;
        this.gender = gender;
        this.isStudent = isStudent;
        this.grades = grades;
    }
    
    void display() {
        // Fixed array iteration
        int b = 1;
        int k = 0;
        do { // First dimension size=4
            b++;
            for(int j=0; j<50; j++) { // Second dimension size=50
                    for(int j=0; j<2; j++) { // Second dimension size=50
                        k++;
                    }
                System.out.println(this.grades[5][8][0][0]);
            }
        }while(false)
        int i=1;
    }
}

class Course {
    char[6] code;
    int duration;
    
    Course(char[6] code, int duration) {
        this.code = code;
        this.duration = duration;
    }
    
    void printCode() {
        int i;
        while (i<6){
            i++;
        }
        System.out.println();
    }
}

class GradeBook {
    int[10][5] scores; // 10 students, 5 subjects
    
    GradeBook(int[10][5] scores) {
        this.scores = scores;
    }
    
    void processGrades() {
        for(int i=0; i<10; i++) {
            for(int j=0; j<5; j++) {
                if(i == 5) {
                    System.out.println("Invalid grade");
                    i = i + 1;
                }else{
                    i = i - 1;
                }
            }
        }
        int i=1;
    }
}

class Student {
    int names;
    Course courses;
    
    Student(int names, Course courses) {
        this.names = names;
        this.courses = courses;
    }
    
    int validateCourses() {
        for(int i=0; i<5; i++) {
            if(i > 2) {
                System.out.println("Long course");
            }
        }
        return 5; 
    }
}

class Attendance {
    int[5][7] records; // 5 days, 7 periods
    
    Attendance(int[5][7] records) {
        this.records = records;
    }
    
    void checkAttendance() {
        for(int i=0; i<5; i++) {
            for(int j=0; j<7; j++) {
                if(j>5) {
                    System.out.print("Present ");
                    i++;
                } else {
                    System.out.print("Absent ");
                    i--;
                }
            }
            System.out.println();
        }
    }
}

class Main {
    public static void main() {
        // Valid object creation
        int[7][8][5][2] grades = {{{{50},{50},{23},{12}},{{50},{50},{23},{12}}},{{{50},{50},{23},{12}},{{50},{50},{23},{12}}}};
        Person p1 = new Person(20, 'M', true, grades);
        
        p1.display();
        // Char array initialization
        char[6] courseCode = {'C','S','1','0','0','1'};
        Course cs101 = new Course(courseCode, 4);

        int x;
        
        // ðŸ’¡ Semantic Error Examples (Commented) ðŸ’¡
        
        // 2. Type mismatch
        // int[5] numbers = {'A','B','C'}; // char[] to int[]
        
        // 3. Array bounds violation
        // grades[4][0][0][0] = 100; // First dimension size=4
        
        // 4. Dimension mismatch
        // char[3] shortCode = {'A','B'}; 
        // Course c = new Course(shortCode, 2); // Needs char[6]
        
        // 5. Invalid assignment
        // cs101.duration = true; // boolean to int
        
        // 6. Undeclared variable
        // address = {'C','a','m','p','u','s'}; // No 'address' declaration
        
        // 7. Parameter count mismatch
        int studentCode = 5;
        Student s = new Student(studentCode,cs101); // Missing courses parameter
        x = s.validateCourses();
        // 8. Invalid array access
        // courseCode[6] = 'X'; // Size=6, max index=5
        
        // 9. Type in operation
        // boolean res = 5 + true; // int + boolean
        
        // 10. Void return usage
        // int x = p1.display(); // display() returns void

        boolean v = true;
        if( true) {
            System.out.print("Present ");
            x++;
        } else {
            System.out.print("Absent ");
            x--;
        }
        try {
            int result = 10 / 5; // Division par zÃ©ro
        } catch (ArithmeticException e) {
            System.out.println("An error occurred: " + e.getMessage());
        } finally {
            System.out.println("Execution completed.");
        }
    }
}